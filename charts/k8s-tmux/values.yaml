# Default values for k8s-tmux
# Namespace configuration
namespaceCreate: false
namespaceName: "ai-dev"

# Deployment configuration
deploymentName: "k8s-tmux"
replicaCount: 1

image:
  repository: ghcr.io/wiredquill/k8s-tmux
  pullPolicy: IfNotPresent
  tag: "latest"

nameOverride: ""
fullnameOverride: ""

service:
  type: LoadBalancer
  port: 80
  targetPort: 7681

ingress:
  enabled: false
  className: ""
  annotations: {}
  hosts:
    - host: k8s-tmux.local
      paths:
        - path: /
          pathType: Prefix
  tls: []

resources:
  limits:
    cpu: 1000m
    memory: 2Gi
  requests:
    cpu: 250m
    memory: 512Mi

# Direct NFS mounts (no PVCs needed)
mounts:
  k8sTmux:
    enabled: true
    nfs:
      server: 10.0.0.10
      path: /volume1/k8s/k8s-tmux
  
  wiredQuill:
    enabled: true
    nfs:
      server: 10.0.0.10
      path: /volume1/WiredQuill
  
  # Home directory mount for persistent user data (.kube, .ssh, etc.)
  homeDirectory:
    enabled: true
    nfs:
      server: 10.0.0.10
      path: /volume1/k8s/user-homes/dev
    mountPath: /home/dev

# Legacy persistence config (for optional PVC-based storage)
persistence:
  enabled: false
  storageClass: ""
  accessMode: ReadWriteMany
  size: 100Gi

nodeSelector: {}

tolerations: []

affinity: {}

# Session configuration
session:
  name: "AI Terminal"
  color: "#667eea"
  user: "dev"

# Kubernetes tools configuration  
kubernetesTools:
  kubectx:
    enabled: true
    autoDetectConfigs: true
    defaultContext: ""
  
  kubectl:
    enabled: true
    version: "latest"
  
  helm:
    enabled: true
    version: "latest"
  
  k9s:
    enabled: true
    version: "latest"

# Development tools
devTools:
  claudeCode:
    enabled: false
    installScript: "curl -fsSL claude.ai/install.sh | bash"
  
  git:
    enabled: true
    userName: ""
    userEmail: ""
  
  ssh:
    enabled: true
    setupKeys: true

# GitHub integration
github:
  enabled: false
  username: ""
  token: ""
  defaultOrg: ""

env:
  TERM: "xterm-256color"

# Security context
securityContext: {}

# Pod security context
podSecurityContext: {}

# Service account
serviceAccount:
  create: true
  annotations: {}
  name: ""

# Autoscaling (disabled by default for this use case)
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 3
  targetCPUUtilizationPercentage: 80